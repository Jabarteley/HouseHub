-- Create property_views table to track which properties users have viewed
create table public.property_views (
  id bigint generated by default as identity primary key,
  user_id uuid not null references public.user_profiles(id) on delete cascade,
  property_id bigint not null references public.properties(id) on delete cascade,
  viewed_at timestamp with time zone default timezone('utc'::text, now()) not null,
  unique (user_id, property_id) -- Prevent duplicate views
);

comment on table public.property_views is 'Tracks which properties users have viewed.';

-- RLS Policies
alter table public.property_views enable row level security;

create policy "Users can view their own property views" on public.property_views for select using (auth.uid() = user_id);
create policy "Users can insert their own property views" on public.property_views for insert with check (auth.uid() = user_id);